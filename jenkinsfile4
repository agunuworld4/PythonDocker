pipeline {
    agent any
    environment {
        mavenHome = tool 'myMaven4'
        PATH = "$mavenHome/bin:$PATH"
        //registry = "311301640590.dkr.ecr.us-east-2.amazonaws.com/mytrunk"
        registryCredential = 'myAwsAuthenticationPluginLogins' 
        //dockerImage = ''
    }
   
    stages {
        stage('Checkout') {
			steps {
				echo "PATH - $PATH"
				echo "BUILD_NUMBER - $env.BUILD_NUMBER"
				echo "BUILD_ID - $env.BUILD_ID"
				echo "JOB_NAME - $env.JOB_NAME"
				echo "BUILD_TAG - $env.BUILD_TAG"
				echo "BUILD_URL - $env.BUILD_URL"
			}
		}
       
    stage('Build Docker Image') {
			steps {
				//"docker build -t 311301640590.dkr.ecr.us-east-2.amazonaws.com/mytrunk:$env.BUILD_TAG"
				script {
					dockerImage = docker.build("311301640590.dkr.ecr.us-east-2.amazonaws.com/mytrunk:${env.BUILD_TAG}")
				}

			}
		}
    

     // Uploading Docker images into Docker Hub
    stage('Upload Image to ECR') {
     steps{   
         script {
            docker.withRegistry( 'https://311301640590.dkr.ecr.us-east-2.amazonaws.com', "ecr:us-east-2:$registryCredential" ) {
             // dockerImage.push();dockerImage.push('latest');
             sh "docker push 311301640590.dkr.ecr.us-east-2.amazonaws.com/mytrunk:${env.BUILD_TAG} "
            }
        }
      }
    }
    
     stage('stop previous containers') {
         steps {
            sh 'docker ps -f name=mytrunk -q | xargs --no-run-if-empty docker container stop'
            sh 'docker container ls -a -fname=mytrunk -q | xargs -r docker container rm'
         }
       }

    // Running Docker container, make sure port 8096 is opened in
    stage('Docker Run') {
     steps{
         script {
            dockerImage.run("-p 7575:5000 --rm --name mytrunk")
         }
      }
    }


  }
}
