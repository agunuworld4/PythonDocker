pipeline
{
    
    agent any

    environment 
    {
        DOCKER_TAG = "${BUILD_NUMBER}"
        PROJECT = 'mytrunk'
        IMAGE = "$PROJECT:$DOCKER_TAG"
        ECRURL = 'http://311301640590.dkr.ecr.us-east-2.amazonaws.com/mytrunk'
        ECRCRED = 'ecr:us-east-2:myAwsAuthenticationPluginLogins'
    }

    stages
    {
       
        stage('Build Docker Image')
        {
            steps
            {
                script
                {
                    //pipelines/TAP_docker_image_build_push_ecr"
                    docker.build("$IMAGE")  
                }
            }
        }

        stage('Push Image To ECR')
        {
            steps
            {
                script
                {
                
                    docker.withRegistry(ECRURL, ECRCRED)
                    {
                        docker.image(IMAGE).push()
                    }
                }
            }
        }

       stage('Deploy To Kubernetes'){
           steps{
               sh "chmod +x changeTag.sh"
               sh "./changeTag.sh ${DOCKER_TAG}"
               sshagent(['eksclimasternodes']) {
               sh "scp -o StrictHostKeyChecking=no services.yml node-app-pod.yml ec2-user@3.135.209.242:/home/ec2-user/"
               script{
                   try{
                       sh "ssh ec2-user@3.135.209.242 kubectl apply -f ."
                   }catch(error){
                       sh "ssh ec2-user@3.135.209.242 kubectl create -f ."
                   }
               }
            }
           }
       } 


    }   
  } 


def getDockerTag(){
    def tag  = sh script: 'git rev-parse HEAD', returnStdout: true
    return tag
}