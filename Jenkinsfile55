pipeline
{
    
    agent any

    environment 
    {
        VERSION = "${BUILD_NUMBER}"
        PROJECT = 'mytrunk'
        IMAGE = "$PROJECT:$VERSION"
        ECRURL = 'http://311301640590.dkr.ecr.us-east-2.amazonaws.com/mytrunk'
        ECRCRED = 'ecr:us-east-2:myAwsAuthenticationPluginLogins'
        dockerImage = ''
    }

    stages
    {
       
        stage('Build Docker Image')
        {
            steps
            {
                script
                {
                    //pipelines/TAP_docker_image_build_push_ecr"
                    docker.build("$IMAGE")  
                }
            }
        }

        stage('Push Image To ECR')
        {
            steps
            {
                script
                {
                
                    docker.withRegistry(ECRURL, ECRCRED)
                    {
                        docker.image(IMAGE).push()
                    }
                }
            }
        }

      // Stopping Docker containers for cleaner Docker run
     stage('stop previous containers') {
         steps {
            sh 'docker ps -f name=PythonContainer -q | xargs --no-run-if-empty docker container stop'
            sh 'docker container ls -a -fname=PythonContainer -q | xargs -r docker container rm'
         }
       }
     
    // Running Docker container, make sure port 8096 is opened in
    stage('Docker Run') {
     steps{
         script {
            dockerImage.run("-p 85:80 --rm --name PythonContainer")
         }
      }
    }   


    }
    
    post
    {
        always
        {
            // make sure that the Docker image is removed
            sh "docker rmi $IMAGE | true"
        }
    }
} 